{"ast":null,"code":"import _regeneratorRuntime from \"/Users/dannylodangel/Documents/repos/plat_weather/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/dannylodangel/Documents/repos/plat_weather/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nexport function useCordinateWeather(_x) {\n  return _useCordinateWeather.apply(this, arguments);\n}\n\nfunction _useCordinateWeather() {\n  _useCordinateWeather = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n    var _result;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get(\"http://api.openweathermap.org/data/2.5/weather?units=metric&lat=\".concat(props === null || props === void 0 ? void 0 : props.coords.latitude.toString(), \"&lon=\").concat(props === null || props === void 0 ? void 0 : props.coords.longitude.toString(), \"&appid=\").concat(process.env.WEATHER_KEY));\n\n          case 2:\n            _result = _context.sent;\n            return _context.abrupt(\"return\", _result.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _useCordinateWeather.apply(this, arguments);\n}\n\nexport function useIPWeather() {\n  console.log('ip weather');\n  axios.get(\"https://ipgeolocation.abstractapi.com/v1/?api_key=\".concat(process.env.IPLOCATION_KEY)).then(function (result) {\n    return result.data;\n  });\n}","map":{"version":3,"sources":["/Users/dannylodangel/Documents/repos/plat_weather/hooks/use-weather.ts"],"names":["axios","useCordinateWeather","props","get","coords","latitude","toString","longitude","process","env","WEATHER_KEY","_result","data","useIPWeather","console","log","IPLOCATION_KEY","then","result"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,gBAAsBC,mBAAtB;AAAA;AAAA;;;kFAAO,iBAAmCC,KAAnC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACmBF,KAAK,CAC1BG,GADqB,2EAE+CD,KAF/C,aAE+CA,KAF/C,uBAE+CA,KAAK,CAAEE,MAAP,CAAcC,QAAd,CAAuBC,QAAvB,EAF/C,kBAEwFJ,KAFxF,aAEwFA,KAFxF,uBAEwFA,KAAK,CAAEE,MAAP,CAAcG,SAAd,CAAwBD,QAAxB,EAFxF,oBAEoIE,OAAO,CAACC,GAAR,CAAYC,WAFhJ,EADnB;;AAAA;AACGC,YAAAA,OADH;AAAA,6CAMEA,OAAO,CAACC,IANV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAUP,OAAO,SAASC,YAAT,GAAwB;AAE3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAf,EAAAA,KAAK,CACJG,GADD,6DAEuDK,OAAO,CAACC,GAAR,CAAYO,cAFnE,GAICC,IAJD,CAIM,UAACC,MAAD,EAAY;AACf,WAAOA,MAAM,CAACN,IAAd;AACF,GAND;AAOH","sourcesContent":["import axios from \"axios\";\n\nexport async function useCordinateWeather(props:GeolocationPosition) {\n    const _result = await axios\n    .get(\n      `http://api.openweathermap.org/data/2.5/weather?units=metric&lat=${props?.coords.latitude.toString()}&lon=${props?.coords.longitude.toString()}&appid=${process.env.WEATHER_KEY\n      }`\n    )\n  return _result.data;\n    \n\n}\nexport function useIPWeather() {\n\n    console.log('ip weather')\n    axios\n    .get(\n      `https://ipgeolocation.abstractapi.com/v1/?api_key=${process.env.IPLOCATION_KEY}`\n    )\n    .then((result) => {\n       return result.data;\n    });\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}