{"ast":null,"code":"import axios from \"axios\";\nexport async function useWeatherApi(props) {\n  const _result = await axios.get(`http://api.openweathermap.org/data/2.5/weather?units=metric&lat=${props === null || props === void 0 ? void 0 : props.coords.latitude.toString()}&lon=${props === null || props === void 0 ? void 0 : props.coords.longitude.toString()}&appid=${process.env.WEATHER_KEY}`);\n\n  return _result.data;\n}\nexport async function useIPWeather() {\n  const _result = await axios.get(`https://ipgeolocation.abstractapi.com/v1/?api_key=${process.env.IPLOCATION_KEY}`);\n\n  return {\n    lat: _result.data.latitude,\n    lng: _result.data.longitude\n  };\n}","map":{"version":3,"sources":["/Users/dannylodangel/Documents/repos/plat_weather/hooks/use-weather.ts"],"names":["axios","useWeatherApi","props","_result","get","coords","latitude","toString","longitude","process","env","WEATHER_KEY","data","useIPWeather","IPLOCATION_KEY","lat","lng"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,eAAeC,aAAf,CAA6BC,KAA7B,EAAmD;AACxD,QAAMC,OAAO,GAAG,MAAMH,KAAK,CACxBI,GADmB,CAEjB,mEAAkEF,KAAnE,aAAmEA,KAAnE,uBAAmEA,KAAK,CAAEG,MAAP,CAAcC,QAAd,CAAuBC,QAAvB,EAAkC,QAAOL,KAA5G,aAA4GA,KAA5G,uBAA4GA,KAAK,CAAEG,MAAP,CAAcG,SAAd,CAAwBD,QAAxB,EAAmC,UAASE,OAAO,CAACC,GAAR,CAAYC,WACnK,EAHiB,CAAtB;;AAKA,SAAOR,OAAO,CAACS,IAAf;AACD;AACD,OAAO,eAAeC,YAAf,GAAqD;AAC1D,QAAMV,OAAO,GAAG,MAChBH,KAAK,CACFI,GADH,CAEK,qDAAoDK,OAAO,CAACC,GAAR,CAAYI,cAAe,EAFpF,CADA;;AAME,SAAO;AACLC,IAAAA,GAAG,EAACZ,OAAO,CAACS,IAAR,CAAaN,QADZ;AAELU,IAAAA,GAAG,EAACb,OAAO,CAACS,IAAR,CAAaJ;AAFZ,GAAP;AAKH","sourcesContent":["import axios from \"axios\";\nimport { GeoCordinates } from \"../interfaces/types\";\n\nexport async function useWeatherApi(props: GeoCordinates) {\n  const _result = await axios\n    .get(\n      `http://api.openweathermap.org/data/2.5/weather?units=metric&lat=${props?.coords.latitude.toString()}&lon=${props?.coords.longitude.toString()}&appid=${process.env.WEATHER_KEY\n      }`\n    )\n  return _result.data;\n}\nexport async function useIPWeather():Promise<GeoCordinates> {\n  const _result = await\n  axios\n    .get(\n      `https://ipgeolocation.abstractapi.com/v1/?api_key=${process.env.IPLOCATION_KEY}`\n    )\n\n    return {\n      lat:_result.data.latitude,\n      lng:_result.data.longitude\n    };\n    \n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}