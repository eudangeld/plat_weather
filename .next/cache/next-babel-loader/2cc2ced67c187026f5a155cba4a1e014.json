{"ast":null,"code":"import _regeneratorRuntime from \"/Users/dannylodangel/Documents/repos/plat_weather/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/dannylodangel/Documents/repos/plat_weather/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/dannylodangel/Documents/repos/plat_weather/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from \"axios\";\nimport { Box } from \"grommet\";\nimport { useEffect } from \"react\";\n\nvar Index = function Index(newsProps) {\n  _s();\n\n  useEffect(function () {\n    console.log(navigator.geolocation.getCurrentPosition);\n  }, []);\n  return __jsx(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 10\n    }\n  }); // return <Layout {...newsProps}></Layout>;\n};\n\n_s(Index, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Index;\nexport default Index;\n\nIndex.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_) {\n    var result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get(\"http://newsapi.org/v2/top-headlines?country=us&apiKey=\".concat(process.env.GNEWSKEY));\n\n          case 2:\n            result = _context.sent;\n            return _context.abrupt(\"return\", {\n              articles: result.data.articles\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); // Maybe later => I can use this\n// const NewsAPI = require('newsapi');\n// const newsapi = new NewsAPI('process.env.GNEWSKEY');\n\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/dannylodangel/Documents/repos/plat_weather/pages/index.tsx"],"names":["axios","Box","useEffect","Index","newsProps","console","log","navigator","geolocation","getCurrentPosition","getInitialProps","_","get","process","env","GNEWSKEY","result","articles","data"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,SAApB;AAEA,SAASC,SAAT,QAA0B,OAA1B;;AAIA,IAAMC,KAAmC,GAAG,SAAtCA,KAAsC,CAACC,SAAD,EAAe;AAAA;;AACzDF,EAAAA,SAAS,CAAC,YAAM;AACdG,IAAAA,OAAO,CAACC,GAAR,CAAYC,SAAS,CAACC,WAAV,CAAsBC,kBAAlC;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,CALyD,CAOzD;AACD,CARD;;GAAMN,K;;KAAAA,K;AAUN,eAAeA,KAAf;;AAEAA,KAAK,CAACO,eAAN;AAAA,sEAAwB,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAQDX,KAAK,CAACY,GAAN,iEACuCC,OAAO,CAACC,GAAR,CAAYC,QADnD,EARC;;AAAA;AAQhBC,YAAAA,MARgB;AAAA,6CAYf;AAAEC,cAAAA,QAAQ,EAAED,MAAM,CAACE,IAAP,CAAYD;AAAxB,aAZe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA,I,CAeA;AACA;AACA","sourcesContent":["import axios from \"axios\";\nimport { Box } from \"grommet\";\nimport { NextPage } from \"next\";\nimport { useEffect } from \"react\";\nimport Layout from \"../components/layout\";\nimport { NewsContainerProps } from \"../interfaces/types\";\n\nconst Index: NextPage<NewsContainerProps> = (newsProps) => {\n  useEffect(() => {\n    console.log(navigator.geolocation.getCurrentPosition);\n  }, []);\n\n  return <Box></Box>;\n\n  // return <Layout {...newsProps}></Layout>;\n};\n\nexport default Index;\n\nIndex.getInitialProps = async (_) => {\n  // navigator.geolocation.getCurrentPosition(function (position) {\n  //   console.log({\n  //     lat: position.coords.latitude,\n  //     lng: position.coords.longitude,\n  //   });\n  // });\n\n  const result = await axios.get(\n    `http://newsapi.org/v2/top-headlines?country=us\\&apiKey=${process.env.GNEWSKEY}`\n  );\n\n  return { articles: result.data.articles };\n};\n\n// Maybe later => I can use this\n// const NewsAPI = require('newsapi');\n// const newsapi = new NewsAPI('process.env.GNEWSKEY');\n"]},"metadata":{},"sourceType":"module"}