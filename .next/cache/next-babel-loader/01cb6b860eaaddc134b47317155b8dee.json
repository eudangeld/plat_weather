{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/dannylodangel/Documents/repos/plat_weather/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from \"axios\";\nimport { Box } from \"grommet\";\nimport { useEffect, useState } from \"react\";\nimport UseWeather from \"../hooks/use-weather\";\n\nvar Index = function Index(_) {\n  _s();\n\n  var _useState = useState(),\n      currentLocation = _useState[0],\n      setCurrentLocation = _useState[1];\n\n  UseWeather(currentLocation);\n  useEffect(function () {\n    navigator.geolocation.getCurrentPosition(function (b) {\n      return setCurrentLocation(b);\n    });\n    axios.get(\"http://api.openweathermap.org/data/2.5/weather?units=metric&lat=\".concat(currentLocation === null || currentLocation === void 0 ? void 0 : currentLocation.coords.latitude.toString(), \"&lon=\").concat(currentLocation === null || currentLocation === void 0 ? void 0 : currentLocation.coords.longitude.toString(), \"&appid=\").concat(process.env.WEATHER_KEY)).then(function (result) {\n      console.log(result.data); // return result;\n    });\n  }, []); // const _weather = UseWeather(currentLocation);\n  // console.log(_weather);\n\n  return __jsx(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 10\n    }\n  }); // return <Layout {...newsProps}></Layout>;\n};\n\n_s(Index, \"wU4qRs44+8xd5mAT9zstKI+ErC8=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/dannylodangel/Documents/repos/plat_weather/pages/index.tsx"],"names":["axios","Box","useEffect","useState","UseWeather","Index","_","currentLocation","setCurrentLocation","navigator","geolocation","getCurrentPosition","b","get","coords","latitude","toString","longitude","process","env","WEATHER_KEY","then","result","console","log","data"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,SAApB;AAEA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;;AAEA,IAAMC,KAAe,GAAG,SAAlBA,KAAkB,CAACC,CAAD,EAAO;AAAA;;AAAA,kBACiBH,QAAQ,EADzB;AAAA,MACtBI,eADsB;AAAA,MACLC,kBADK;;AAG7BJ,EAAAA,UAAU,CAACG,eAAD,CAAV;AACAL,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAACC,CAAD;AAAA,aAAOJ,kBAAkB,CAACI,CAAD,CAAzB;AAAA,KAAzC;AAEAZ,IAAAA,KAAK,CACFa,GADH,2EAEuEN,eAFvE,aAEuEA,eAFvE,uBAEuEA,eAAe,CAAEO,MAAjB,CAAwBC,QAAxB,CAAiCC,QAAjC,EAFvE,kBAE0HT,eAF1H,aAE0HA,eAF1H,uBAE0HA,eAAe,CAAEO,MAAjB,CAAwBG,SAAxB,CAAkCD,QAAlC,EAF1H,oBAGME,OAAO,CAACC,GAAR,CAAYC,WAHlB,GAMGC,IANH,CAMQ,UAACC,MAAD,EAAY;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB,EADgB,CAEhB;AACD,KATH;AAUD,GAbQ,EAaN,EAbM,CAAT,CAJ6B,CAmB7B;AAEA;;AAEA,SAAO,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,CAvB6B,CAyB7B;AACD,CA1BD;;GAAMpB,K;;KAAAA,K;AA4BN,eAAeA,KAAf","sourcesContent":["import axios from \"axios\";\nimport { Box } from \"grommet\";\nimport { NextPage } from \"next\";\nimport { useEffect, useState } from \"react\";\nimport UseWeather from \"../hooks/use-weather\";\n\nconst Index: NextPage = (_) => {\n  const [currentLocation, setCurrentLocation] = useState<GeolocationPosition>();\n\n  UseWeather(currentLocation);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((b) => setCurrentLocation(b));\n\n    axios\n      .get(\n        `http://api.openweathermap.org/data/2.5/weather?units=metric&lat=${currentLocation?.coords.latitude.toString()}&lon=${currentLocation?.coords.longitude.toString()}&appid=${\n          process.env.WEATHER_KEY\n        }`\n      )\n      .then((result) => {\n        console.log(result.data);\n        // return result;\n      });\n  }, []);\n\n  // const _weather = UseWeather(currentLocation);\n\n  // console.log(_weather);\n\n  return <Box></Box>;\n\n  // return <Layout {...newsProps}></Layout>;\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}