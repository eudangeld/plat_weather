{"ast":null,"code":"var _jsxFileName = \"/Users/dannylodangel/Documents/repos/plat_weather/components/spinner.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nexport const Spinner = props => {\n  return __jsx(StyledSpinner, _extends({\n    viewBox: \"0 0 50 50\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }), __jsx(\"circle\", {\n    className: \"path\",\n    cx: \"25\",\n    cy: \"25\",\n    r: \"20\",\n    fill: \"none\",\n    strokeWidth: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }));\n};\nconst StyledSpinner = styled.svg`\n  color: \"black\";\n  animation: rotate 1s linear infinite;\n  margin: ${props => props.plain ? \"0px\" : \"40px\"};\n  width: ${props => props.size || \"50px\"};\n  height: ${props => props.size || \"50px\"};\n  & .path {\n    stroke: \"black\";\n    stroke-linecap: round;\n    animation: dash 1.5s ease-in-out infinite;\n  }\n  @keyframes rotate {\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n  @keyframes dash {\n    0% {\n      stroke-dasharray: 1, 150;\n      stroke-dashoffset: 0;\n    }\n    50% {\n      stroke-dasharray: 90, 150;\n      stroke-dashoffset: -35;\n    }\n    100% {\n      stroke-dasharray: 90, 150;\n      stroke-dashoffset: -124;\n    }\n  }\n`;\nexport default Spinner;","map":{"version":3,"sources":["/Users/dannylodangel/Documents/repos/plat_weather/components/spinner.tsx"],"names":["React","styled","Spinner","props","StyledSpinner","svg","plain","size"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAQA,OAAO,MAAMC,OAAkB,GAAIC,KAAD,IAAW;AAC3C,SACE,MAAC,aAAD;AAAe,IAAA,OAAO,EAAC;AAAvB,KAAuCA,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,EAAE,EAAC,IAFL;AAGE,IAAA,EAAE,EAAC,IAHL;AAIE,IAAA,CAAC,EAAC,IAJJ;AAKE,IAAA,IAAI,EAAC,MALP;AAME,IAAA,WAAW,EAAC,GANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAYD,CAbM;AAeP,MAAMC,aAAa,GAAGH,MAAM,CAACI,GAAW;AACxC;AACA;AACA,YAAaF,KAAD,IAAYA,KAAK,CAACG,KAAN,GAAc,KAAd,GAAsB,MAAQ;AACtD,WAAYH,KAAD,IAAWA,KAAK,CAACI,IAAN,IAAc,MAAO;AAC3C,YAAaJ,KAAD,IAAWA,KAAK,CAACI,IAAN,IAAc,MAAO;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA9BA;AAgCA,eAAeL,OAAf","sourcesContent":["import React, { FC } from \"react\";\nimport styled from \"styled-components\";\n\ntype Props = {\n  plain?: boolean;\n  color?: string;\n  size?: string;\n};\n\nexport const Spinner: FC<Props> = (props) => {\n  return (\n    <StyledSpinner viewBox=\"0 0 50 50\" {...props}>\n      <circle\n        className=\"path\"\n        cx=\"25\"\n        cy=\"25\"\n        r=\"20\"\n        fill=\"none\"\n        strokeWidth=\"2\"\n      />\n    </StyledSpinner>\n  );\n};\n\nconst StyledSpinner = styled.svg<Props>`\n  color: \"black\";\n  animation: rotate 1s linear infinite;\n  margin: ${(props) => (props.plain ? \"0px\" : \"40px\")};\n  width: ${(props) => props.size || \"50px\"};\n  height: ${(props) => props.size || \"50px\"};\n  & .path {\n    stroke: \"black\";\n    stroke-linecap: round;\n    animation: dash 1.5s ease-in-out infinite;\n  }\n  @keyframes rotate {\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n  @keyframes dash {\n    0% {\n      stroke-dasharray: 1, 150;\n      stroke-dashoffset: 0;\n    }\n    50% {\n      stroke-dasharray: 90, 150;\n      stroke-dashoffset: -35;\n    }\n    100% {\n      stroke-dasharray: 90, 150;\n      stroke-dashoffset: -124;\n    }\n  }\n`;\n\nexport default Spinner;\n"]},"metadata":{},"sourceType":"module"}