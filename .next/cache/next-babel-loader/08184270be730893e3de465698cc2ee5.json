{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/dannylodangel/Documents/repos/plat_weather/components/card.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Box, Heading, Image, Text } from \"grommet\";\nexport var Card = function Card(props) {\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    background: {\n      image: \"/bg.jpg\"\n    },\n    margin: {\n      top: \"large\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, __jsx(Heading, {\n    color: \"brand\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, props.name), __jsx(Text, {\n    color: \"brand\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, \"Temperature\"), __jsx(Text, {\n    color: \"brand\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, \"Humidity\"), __jsx(Text, {\n    color: \"brand\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, Math.trunc(props.main.humidity)), __jsx(Text, {\n    color: \"brand\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, Math.trunc(props.main.temp_max)), __jsx(Text, {\n    color: \"brand\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, Math.trunc(props.main.temp_min)), __jsx(Box, {\n    width: \"medium\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, props.weather && __jsx(Image, {\n    fit: \"contain\",\n    src: process.env.BASE_ICON_URL + props.weather[0].icon + \"@2x.png\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }))));\n};\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/dannylodangel/Documents/repos/plat_weather/components/card.tsx"],"names":["Box","Heading","Image","Text","Card","props","image","top","name","Math","trunc","main","humidity","temp_max","temp_min","weather","process","env","BASE_ICON_URL","icon"],"mappings":";;;;;AAAA,SAASA,GAAT,EAAsBC,OAAtB,EAA+BC,KAA/B,EAAsCC,IAAtC,QAAkD,SAAlD;AAIA,OAAO,IAAMC,IAAsB,GAAG,SAAzBA,IAAyB,CAACC,KAAD,EAAW;AAC/C,SACE,4BACE,MAAC,GAAD;AAAK,IAAA,UAAU,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAjB;AAAuC,IAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,KAAK,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBF,KAAK,CAACG,IAA9B,CADF,EAEE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAIE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,EAKE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBC,IAAI,CAACC,KAAL,CAAWL,KAAK,CAACM,IAAN,CAAWC,QAAtB,CAArB,CALF,EAME,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBH,IAAI,CAACC,KAAL,CAAWL,KAAK,CAACM,IAAN,CAAWE,QAAtB,CAArB,CANF,EAOE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBJ,IAAI,CAACC,KAAL,CAAWL,KAAK,CAACM,IAAN,CAAWG,QAAtB,CAArB,CAPF,EAQE,MAAC,GAAD;AAAK,IAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,KAAK,CAACU,OAAN,IACC,MAAC,KAAD;AACE,IAAA,GAAG,EAAC,SADN;AAEE,IAAA,GAAG,EACDC,OAAO,CAACC,GAAR,CAAYC,aAAZ,GAA4Bb,KAAK,CAACU,OAAN,CAAc,CAAd,EAAiBI,IAA7C,GAAoD,SAHxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CARF,CADF,CADF;AAuBD,CAxBM;KAAMf,I;AA0Bb,eAAeA,IAAf","sourcesContent":["import { Box, Button, Heading, Image, Text } from \"grommet\";\nimport { FC } from \"react\";\nimport { WeatherProps } from \"../interfaces/types\";\n\nexport const Card: FC<WeatherProps> = (props) => {\n  return (\n    <>\n      <Box background={{ image: \"/bg.jpg\" }} margin={{ top: \"large\" }}>\n        <Heading color=\"brand\">{props.name}</Heading>\n        <Text color=\"brand\">Temperature</Text>\n        {/* <Text color=\"brand\">{Math.trunc(props.main.temp) + \" ยบ\"}</Text> */}\n        <Text color=\"brand\">Humidity</Text>\n        <Text color=\"brand\">{Math.trunc(props.main.humidity)}</Text>\n        <Text color=\"brand\">{Math.trunc(props.main.temp_max)}</Text>\n        <Text color=\"brand\">{Math.trunc(props.main.temp_min)}</Text>\n        <Box width=\"medium\">\n          {props.weather && (\n            <Image\n              fit=\"contain\"\n              src={\n                process.env.BASE_ICON_URL + props.weather[0].icon + \"@2x.png\"\n              }\n            />\n          )}\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}