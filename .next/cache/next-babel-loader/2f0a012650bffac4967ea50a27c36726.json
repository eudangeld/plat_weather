{"ast":null,"code":"import _extends from \"/Users/dannylodangel/Documents/repos/plat_weather/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"/Users/dannylodangel/Documents/repos/plat_weather/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/dannylodangel/Documents/repos/plat_weather/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/dannylodangel/Documents/repos/plat_weather/pages/index.tsx\",\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/layout\";\nimport { useLayoutEffect, useState } from \"react\";\nimport { useIPWeather, useWeatherCordinates } from \"../hooks/use-weather\";\n\nvar Index = function Index(_) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  var _aproximateLocation = false;\n\n  var _useState = useState({\n    lat: 0,\n    lng: 0\n  }),\n      currentLocation = _useState[0],\n      setCurrentLocation = _useState[1];\n\n  var _useState2 = useState(),\n      weather = _useState2[0],\n      setWeather = _useState2[1];\n\n  useLayoutEffect(_s(function () {\n    _s();\n\n    /*#__PURE__*/\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return navigator.geolocation.getCurrentPosition(function (b) {\n                return setCurrentLocation({\n                  lat: b.coords.latitude,\n                  lng: b.coords.longitude\n                });\n              });\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    if (currentLocation.lat === 0 && currentLocation.lng === 0) {\n      _aproximateLocation = true;\n      useIPWeather().then(function (result) {\n        return setCurrentLocation(result);\n      });\n    }\n\n    useWeatherCordinates(currentLocation).then(function (result) {\n      return setWeather(result);\n    });\n  }, \"54TbCV7Ho8g9rEtp9cVO4jBzpig=\", false, function () {\n    return [useIPWeather, useWeatherCordinates];\n  }), []);\n  console.log(\"chegamos\");\n  return __jsx(Layout, _extends({}, weather, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }\n  }));\n};\n\n_s2(Index, \"2X0jjelaTbcdBwXeHOwIp3uqYTI=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/dannylodangel/Documents/repos/plat_weather/pages/index.tsx"],"names":["Layout","useLayoutEffect","useState","useIPWeather","useWeatherCordinates","Index","_","_aproximateLocation","lat","lng","currentLocation","setCurrentLocation","weather","setWeather","navigator","geolocation","getCurrentPosition","b","coords","latitude","longitude","then","result","console","log"],"mappings":";;;;;;;;;;AACA,OAAOA,MAAP,MAAmB,sBAAnB;AAEA,SAAoBC,eAApB,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,YAAT,EAAuBC,oBAAvB,QAAmD,sBAAnD;;AAGA,IAAMC,KAAoB,GAAG,SAAvBA,KAAuB,CAACC,CAAD,EAAO;AAAA;;AAAA;;AAClC,MAAIC,mBAAmB,GAAG,KAA1B;;AADkC,kBAEYL,QAAQ,CAAgB;AACpEM,IAAAA,GAAG,EAAE,CAD+D;AAEpEC,IAAAA,GAAG,EAAE;AAF+D,GAAhB,CAFpB;AAAA,MAE3BC,eAF2B;AAAA,MAEVC,kBAFU;;AAAA,mBAMJT,QAAQ,EANJ;AAAA,MAM3BU,OAN2B;AAAA,MAMlBC,UANkB;;AAQlCZ,EAAAA,eAAe,IAAC,YAAM;AAAA;;AACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACQa,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAACC,CAAD;AAAA,uBAC7CN,kBAAkB,CAAC;AACjBH,kBAAAA,GAAG,EAAES,CAAC,CAACC,MAAF,CAASC,QADG;AAEjBV,kBAAAA,GAAG,EAAEQ,CAAC,CAACC,MAAF,CAASE;AAFG,iBAAD,CAD2B;AAAA,eAAzC,CADR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQA,QAAIV,eAAe,CAACF,GAAhB,KAAwB,CAAxB,IAA6BE,eAAe,CAACD,GAAhB,KAAwB,CAAzD,EAA4D;AAC1DF,MAAAA,mBAAmB,GAAG,IAAtB;AACAJ,MAAAA,YAAY,GAAGkB,IAAf,CAAoB,UAACC,MAAD;AAAA,eAAYX,kBAAkB,CAACW,MAAD,CAA9B;AAAA,OAApB;AACD;;AAEDlB,IAAAA,oBAAoB,CAACM,eAAD,CAApB,CAAsCW,IAAtC,CAA2C,UAACC,MAAD;AAAA,aAAYT,UAAU,CAACS,MAAD,CAAtB;AAAA,KAA3C;AACD,GAfc;AAAA,YAWXnB,YAXW,EAcbC,oBAda;AAAA,MAeZ,EAfY,CAAf;AAiBAmB,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAEA,SAAO,MAAC,MAAD,eAAYZ,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CA5BD;;IAAMP,K;;KAAAA,K;AA8BN,eAAeA,KAAf","sourcesContent":["import { Box, Image } from \"grommet\";\nimport Layout from \"../components/layout\";\nimport { NextPage } from \"next\";\nimport { useEffect, useLayoutEffect, useState } from \"react\";\nimport { useIPWeather, useWeatherCordinates } from \"../hooks/use-weather\";\nimport { GeoCordinates } from \"../interfaces/types\";\n\nconst Index: NextPage<any> = (_) => {\n  let _aproximateLocation = false;\n  const [currentLocation, setCurrentLocation] = useState<GeoCordinates>({\n    lat: 0,\n    lng: 0,\n  });\n  const [weather, setWeather] = useState<any>();\n\n  useLayoutEffect(() => {\n    async () =>\n      await navigator.geolocation.getCurrentPosition((b) =>\n        setCurrentLocation({\n          lat: b.coords.latitude,\n          lng: b.coords.longitude,\n        })\n      );\n\n    if (currentLocation.lat === 0 && currentLocation.lng === 0) {\n      _aproximateLocation = true;\n      useIPWeather().then((result) => setCurrentLocation(result));\n    }\n\n    useWeatherCordinates(currentLocation).then((result) => setWeather(result));\n  }, []);\n\n  console.log(\"chegamos\");\n\n  return <Layout {...weather} />;\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}