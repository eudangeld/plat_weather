{"ast":null,"code":"import _regeneratorRuntime from \"/Users/dannylodangel/Documents/repos/plat_weather/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/dannylodangel/Documents/repos/plat_weather/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _extends from \"/Users/dannylodangel/Documents/repos/plat_weather/node_modules/@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/dannylodangel/Documents/repos/plat_weather/pages/index.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from \"axios\";\nimport Layout from \"../components/layout\";\n\nvar Index = function Index(newsProps) {\n  return __jsx(Layout, _extends({}, newsProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 10\n    }\n  }));\n};\n\n_c = Index;\nexport default Index;\n\nIndex.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_) {\n    var result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            navigator.geolocation.getCurrentPosition(function (position) {\n              console.log({\n                lat: position.coords.latitude,\n                lng: position.coords.longitude\n              });\n            });\n            _context.next = 3;\n            return axios.get(\"http://newsapi.org/v2/top-headlines?country=us&apiKey=\".concat(process.env.GNEWSKEY));\n\n          case 3:\n            result = _context.sent;\n            return _context.abrupt(\"return\", {\n              articles: result.data.articles\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); // Maybe later => I can use this\n// const NewsAPI = require('newsapi');\n// const newsapi = new NewsAPI('process.env.GNEWSKEY');\n\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/dannylodangel/Documents/repos/plat_weather/pages/index.tsx"],"names":["axios","Layout","Index","newsProps","getInitialProps","_","navigator","geolocation","getCurrentPosition","position","console","log","lat","coords","latitude","lng","longitude","get","process","env","GNEWSKEY","result","articles","data"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;;AAGA,IAAMC,KAAmC,GAAG,SAAtCA,KAAsC,CAACC,SAAD,EAAe;AACzD,SAAO,MAAC,MAAD,eAAYA,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAFD;;KAAMD,K;AAIN,eAAeA,KAAf;;AAEAA,KAAK,CAACE,eAAN;AAAA,sEAAwB,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBC,YAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAAUC,QAAV,EAAoB;AAC3DC,cAAAA,OAAO,CAACC,GAAR,CAAY;AACVC,gBAAAA,GAAG,EAAEH,QAAQ,CAACI,MAAT,CAAgBC,QADX;AAEVC,gBAAAA,GAAG,EAAEN,QAAQ,CAACI,MAAT,CAAgBG;AAFX,eAAZ;AAID,aALD;AADsB;AAAA,mBAQDhB,KAAK,CAACiB,GAAN,iEACuCC,OAAO,CAACC,GAAR,CAAYC,QADnD,EARC;;AAAA;AAQhBC,YAAAA,MARgB;AAAA,6CAYf;AAAEC,cAAAA,QAAQ,EAAED,MAAM,CAACE,IAAP,CAAYD;AAAxB,aAZe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA,I,CAeA;AACA;AACA","sourcesContent":["import axios from \"axios\";\nimport { NextPage } from \"next\";\nimport Layout from \"../components/layout\";\nimport { NewsContainerProps } from \"../interfaces/types\";\n\nconst Index: NextPage<NewsContainerProps> = (newsProps) => {\n  return <Layout {...newsProps}></Layout>;\n};\n\nexport default Index;\n\nIndex.getInitialProps = async (_) => {\n  navigator.geolocation.getCurrentPosition(function (position) {\n    console.log({\n      lat: position.coords.latitude,\n      lng: position.coords.longitude,\n    });\n  });\n\n  const result = await axios.get(\n    `http://newsapi.org/v2/top-headlines?country=us\\&apiKey=${process.env.GNEWSKEY}`\n  );\n\n  return { articles: result.data.articles };\n};\n\n// Maybe later => I can use this\n// const NewsAPI = require('newsapi');\n// const newsapi = new NewsAPI('process.env.GNEWSKEY');\n"]},"metadata":{},"sourceType":"module"}