{"ast":null,"code":"var _jsxFileName = \"/Users/dannylodangel/Documents/repos/plat_weather/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport Layout from \"../components/layout\";\nimport Spinner from \"../components/spinner\";\nimport useGeoWeather from \"../hooks/useWeather\";\n\nconst Index = _ => {\n  const [weather, loading, usingGeoIp] = useGeoWeather();\n  console.log(weather);\n  console.log(loading);\n  console.log(usingGeoIp);\n\n  if (loading) {\n    return __jsx(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(Layout, _extends({}, weather, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }\n  }));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/dannylodangel/Documents/repos/plat_weather/pages/index.tsx"],"names":["Layout","Spinner","useGeoWeather","Index","_","weather","loading","usingGeoIp","console","log"],"mappings":";;;;;;AACA,OAAOA,MAAP,MAAmB,sBAAnB;AAMA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,aAAP,MAA0B,qBAA1B;;AAEA,MAAMC,KAAoB,GAAIC,CAAD,IAAO;AAClC,QAAM,CAACC,OAAD,EAAUC,OAAV,EAAmBC,UAAnB,IAAiCL,aAAa,EAApD;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;;AAEA,MAAID,OAAJ,EAAa;AACX,WAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SAAO,MAAC,MAAD,eAAYD,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAXD;;AAaA,eAAeF,KAAf","sourcesContent":["import { Box, Image } from \"grommet\";\nimport Layout from \"../components/layout\";\nimport { NextPage } from \"next\";\nimport { useEffect, useLayoutEffect, useState } from \"react\";\n\nimport { useIPWeather, useWeatherCordinates } from \"../hooks/use-weather\";\nimport { GeoCordinates } from \"../interfaces/types\";\nimport Spinner from \"../components/spinner\";\nimport useGeoWeather from \"../hooks/useWeather\";\n\nconst Index: NextPage<any> = (_) => {\n  const [weather, loading, usingGeoIp] = useGeoWeather();\n  console.log(weather);\n  console.log(loading);\n  console.log(usingGeoIp);\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  return <Layout {...weather}></Layout>;\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}