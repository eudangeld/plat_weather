{"ast":null,"code":"import _extends from \"/Users/dannylodangel/Documents/repos/plat_weather/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _taggedTemplateLiteral from \"/Users/dannylodangel/Documents/repos/plat_weather/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/Users/dannylodangel/Documents/repos/plat_weather/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dannylodangel/Documents/repos/plat_weather/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/dannylodangel/Documents/repos/plat_weather/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/dannylodangel/Documents/repos/plat_weather/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dannylodangel/Documents/repos/plat_weather/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/dannylodangel/Documents/repos/plat_weather/pages/_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n         \\n  body {\\n    margin: 0;\\n    a:link { \\n            text-decoration: none; \\n        } \\n        \\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Grommet } from \"grommet\";\nimport { deepMerge } from \"grommet/utils\";\nimport App from \"next/app\";\nimport React from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { Provider } from \"react-redux\";\nimport store from \"../redux/store\";\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      var GlobalStyle = createGlobalStyle(_templateObject()); // here we can put devived styles from theo or hardCoded\n\n      var fontTheme = deepMerge(GlobalStyle, {\n        global: {\n          body: {\n            margin: \"48px\"\n          },\n          size: {\n            xxsmall: \"48px\",\n            xsmall: \"96px\",\n            small: \"192px\",\n            almost_m: \"300px\",\n            medium: \"384px\",\n            large: \"768px\",\n            xlarge: \"1200px\",\n            xxlarge: \"1536px\",\n            full: \"100%\"\n          }\n        }\n      });\n      return __jsx(Grommet, {\n        theme: fontTheme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }\n      }, __jsx(Provider, {\n        store: store,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }), __jsx(GlobalStyle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }), __jsx(Component, _extends({}, pageProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport { MyApp as default };","map":{"version":3,"sources":["/Users/dannylodangel/Documents/repos/plat_weather/pages/_app.tsx"],"names":["Grommet","deepMerge","App","React","createGlobalStyle","Provider","store","MyApp","props","Component","pageProps","GlobalStyle","fontTheme","global","body","margin","size","xxsmall","xsmall","small","almost_m","medium","large","xlarge","xxlarge","full"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,OAAT,QAAwB,SAAxB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;IAEqBC,K;;;;;;;;;;;;;6BACV;AAAA,wBAC0B,KAAKC,KAD/B;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,SADZ,eACYA,SADZ;AAGP,UAAMC,WAAW,GAAGP,iBAAH,mBAAjB,CAHO,CAaP;;AAEA,UAAMQ,SAAS,GAAGX,SAAS,CAACU,WAAD,EAAc;AACvCE,QAAAA,MAAM,EAAE;AACNC,UAAAA,IAAI,EAAE;AACJC,YAAAA,MAAM,EAAE;AADJ,WADA;AAINC,UAAAA,IAAI,EAAE;AACJC,YAAAA,OAAO,EAAE,MADL;AAEJC,YAAAA,MAAM,EAAE,MAFJ;AAGJC,YAAAA,KAAK,EAAE,OAHH;AAIJC,YAAAA,QAAQ,EAAE,OAJN;AAKJC,YAAAA,MAAM,EAAE,OALJ;AAMJC,YAAAA,KAAK,EAAE,OANH;AAOJC,YAAAA,MAAM,EAAE,QAPJ;AAQJC,YAAAA,OAAO,EAAE,QARL;AASJC,YAAAA,IAAI,EAAE;AATF;AAJA;AAD+B,OAAd,CAA3B;AAmBA,aACE,MAAC,OAAD;AAAS,QAAA,KAAK,EAAEb,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,QAAD;AAAU,QAAA,KAAK,EAAEN,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAGE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,MAAC,SAAD,eAAeI,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJF,CADF;AAQD;;;;EA3CgCR,G;;SAAdK,K","sourcesContent":["import { Grommet } from \"grommet\";\nimport { deepMerge } from \"grommet/utils\";\nimport App from \"next/app\";\nimport React from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { Provider } from \"react-redux\";\nimport store from \"../redux/store\";\n\nexport default class MyApp extends App {\n  render() {\n    const { Component, pageProps } = this.props;\n\n    const GlobalStyle = createGlobalStyle`\n         \n  body {\n    margin: 0;\n    a:link { \n            text-decoration: none; \n        } \n        \n  }\n`;\n    // here we can put devived styles from theo or hardCoded\n\n    const fontTheme = deepMerge(GlobalStyle, {\n      global: {\n        body: {\n          margin: \"48px\",\n        },\n        size: {\n          xxsmall: \"48px\",\n          xsmall: \"96px\",\n          small: \"192px\",\n          almost_m: \"300px\",\n          medium: \"384px\",\n          large: \"768px\",\n          xlarge: \"1200px\",\n          xxlarge: \"1536px\",\n          full: \"100%\",\n        },\n      },\n    });\n\n    return (\n      <Grommet theme={fontTheme}>\n        <Provider store={store}></Provider>\n\n        <GlobalStyle />\n        <Component {...pageProps} />\n      </Grommet>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}