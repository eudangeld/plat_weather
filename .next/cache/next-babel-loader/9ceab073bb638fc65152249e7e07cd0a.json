{"ast":null,"code":"var _jsxFileName = \"/Users/dannylodangel/Documents/repos/plat_weather/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from \"axios\";\nimport { Box } from \"grommet\";\nimport { useEffect, useState } from \"react\";\n\nconst Index = _ => {\n  const {\n    0: currentLocation,\n    1: setCurrentLocation\n  } = useState();\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(b => setCurrentLocation(b));\n    axios.get(`api.openweathermap.org/data/2.5/weather?lat=${currentLocation === null || currentLocation === void 0 ? void 0 : currentLocation.coords.latitude}&lon=${currentLocation === null || currentLocation === void 0 ? void 0 : currentLocation.coords.longitude}&appid=${process.env.WEATHER_KEY}`).then(result => {\n      console.log(result); // return result;\n    });\n  }, []); // const _weather = UseWeather(currentLocation);\n  // console.log(_weather);\n\n  return __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }\n  }); // return <Layout {...newsProps}></Layout>;\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/dannylodangel/Documents/repos/plat_weather/pages/index.tsx"],"names":["axios","Box","useEffect","useState","Index","_","currentLocation","setCurrentLocation","navigator","geolocation","getCurrentPosition","b","get","coords","latitude","longitude","process","env","WEATHER_KEY","then","result","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,SAApB;AAEA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAGA,MAAMC,KAAe,GAAIC,CAAD,IAAO;AAC7B,QAAM;AAAA,OAACC,eAAD;AAAA,OAAkBC;AAAlB,MAAwCJ,QAAQ,EAAtD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,CAAD,IAAOJ,kBAAkB,CAACI,CAAD,CAAlE;AACAX,IAAAA,KAAK,CACFY,GADH,CAEK,+CAA8CN,eAA/C,aAA+CA,eAA/C,uBAA+CA,eAAe,CAAEO,MAAjB,CAAwBC,QAAS,QAAOR,eAAvF,aAAuFA,eAAvF,uBAAuFA,eAAe,CAAEO,MAAjB,CAAwBE,SAAU,UAASC,OAAO,CAACC,GAAR,CAAYC,WAAY,EAF9J,EAIGC,IAJH,CAISC,MAAD,IAAY;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EADgB,CAEhB;AACD,KAPH;AAQD,GAVQ,EAUN,EAVM,CAAT,CAH6B,CAe7B;AAEA;;AAEA,SAAO,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,CAnB6B,CAqB7B;AACD,CAtBD;;AAwBA,eAAehB,KAAf","sourcesContent":["import axios from \"axios\";\nimport { Box } from \"grommet\";\nimport { NextPage } from \"next\";\nimport { useEffect, useState } from \"react\";\nimport UseWeather from \"../hooks/use-weather\";\n\nconst Index: NextPage = (_) => {\n  const [currentLocation, setCurrentLocation] = useState<GeolocationPosition>();\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((b) => setCurrentLocation(b));\n    axios\n      .get(\n        `api.openweathermap.org/data/2.5/weather?lat=${currentLocation?.coords.latitude}&lon=${currentLocation?.coords.longitude}&appid=${process.env.WEATHER_KEY}`\n      )\n      .then((result) => {\n        console.log(result);\n        // return result;\n      });\n  }, []);\n\n  // const _weather = UseWeather(currentLocation);\n\n  // console.log(_weather);\n\n  return <Box></Box>;\n\n  // return <Layout {...newsProps}></Layout>;\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}