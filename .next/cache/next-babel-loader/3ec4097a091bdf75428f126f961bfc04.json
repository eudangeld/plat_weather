{"ast":null,"code":"import _regeneratorRuntime from \"/Users/dannylodangel/Documents/repos/plat_weather/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/dannylodangel/Documents/repos/plat_weather/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nexport function useWeatherApi(_x) {\n  return _useWeatherApi.apply(this, arguments);\n}\n\nfunction _useWeatherApi() {\n  _useWeatherApi = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n    var _result;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get(\"http://api.openweathermap.org/data/2.5/weather?units=metric&lat=\".concat(props === null || props === void 0 ? void 0 : props.coords.latitude.toString(), \"&lon=\").concat(props === null || props === void 0 ? void 0 : props.coords.longitude.toString(), \"&appid=\").concat(process.env.WEATHER_KEY));\n\n          case 2:\n            _result = _context.sent;\n            return _context.abrupt(\"return\", _result.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _useWeatherApi.apply(this, arguments);\n}\n\nexport function useIPWeather() {\n  return _useIPWeather.apply(this, arguments);\n}\n\nfunction _useIPWeather() {\n  _useIPWeather = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var _result;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return axios.get(\"https://ipgeolocation.abstractapi.com/v1/?api_key=\".concat(process.env.IPLOCATION_KEY));\n\n          case 2:\n            _result = _context2.sent;\n            return _context2.abrupt(\"return\", {\n              lat: _result.data.latitude,\n              lng: _result.data.longitude\n            });\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _useIPWeather.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/dannylodangel/Documents/repos/plat_weather/hooks/use-weather.ts"],"names":["axios","useWeatherApi","props","get","coords","latitude","toString","longitude","process","env","WEATHER_KEY","_result","data","useIPWeather","IPLOCATION_KEY","lat","lng"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,gBAAsBC,aAAtB;AAAA;AAAA;;;4EAAO,iBAA6BC,KAA7B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACiBF,KAAK,CACxBG,GADmB,2EAEiDD,KAFjD,aAEiDA,KAFjD,uBAEiDA,KAAK,CAAEE,MAAP,CAAcC,QAAd,CAAuBC,QAAvB,EAFjD,kBAE0FJ,KAF1F,aAE0FA,KAF1F,uBAE0FA,KAAK,CAAEE,MAAP,CAAcG,SAAd,CAAwBD,QAAxB,EAF1F,oBAEsIE,OAAO,CAACC,GAAR,CAAYC,WAFlJ,EADjB;;AAAA;AACCC,YAAAA,OADD;AAAA,6CAMEA,OAAO,CAACC,IANV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAQP,gBAAsBC,YAAtB;AAAA;AAAA;;;2EAAO;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAELb,KAAK,CACFG,GADH,6DAEyDK,OAAO,CAACC,GAAR,CAAYK,cAFrE,EAFK;;AAAA;AACCH,YAAAA,OADD;AAAA,8CAOI;AACLI,cAAAA,GAAG,EAACJ,OAAO,CAACC,IAAR,CAAaP,QADZ;AAELW,cAAAA,GAAG,EAACL,OAAO,CAACC,IAAR,CAAaL;AAFZ,aAPJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import axios from \"axios\";\nimport { GeoCordinates } from \"../interfaces/types\";\n\nexport async function useWeatherApi(props: GeoCordinates) {\n  const _result = await axios\n    .get(\n      `http://api.openweathermap.org/data/2.5/weather?units=metric&lat=${props?.coords.latitude.toString()}&lon=${props?.coords.longitude.toString()}&appid=${process.env.WEATHER_KEY\n      }`\n    )\n  return _result.data;\n}\nexport async function useIPWeather():Promise<GeoCordinates> {\n  const _result = await\n  axios\n    .get(\n      `https://ipgeolocation.abstractapi.com/v1/?api_key=${process.env.IPLOCATION_KEY}`\n    )\n\n    return {\n      lat:_result.data.latitude,\n      lng:_result.data.longitude\n    };\n    \n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}