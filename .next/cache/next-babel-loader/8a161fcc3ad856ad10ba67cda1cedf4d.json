{"ast":null,"code":"var _jsxFileName = \"/Users/dannylodangel/Documents/repos/plat_weather/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport Layout from \"../components/layout\";\nimport { useEffect } from \"react\";\nimport { useIPWeather, useWeatherCordinates } from \"../hooks/use-weather\";\n\nconst Index = _ => {\n  let _aproximateLocation = false;\n  let currentLocation = {\n    lat: 0,\n    lng: 0\n  };\n  let weather;\n  useEffect(() => {\n    async () => await navigator.geolocation.getCurrentPosition(b => currentLocation = {\n      lat: b.coords.latitude,\n      lng: b.coords.longitude\n    });\n\n    if (currentLocation.lat === 0 && currentLocation.lng === 0) {\n      _aproximateLocation = true;\n      useIPWeather().then(result => currentLocation = result);\n    }\n\n    useWeatherCordinates(currentLocation).then(result => weather = result);\n  }, []);\n  console.log(\"chegamos\");\n  console.log(weather);\n  return __jsx(Layout, _extends({}, weather, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 10\n    }\n  }));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/dannylodangel/Documents/repos/plat_weather/pages/index.tsx"],"names":["Layout","useEffect","useIPWeather","useWeatherCordinates","Index","_","_aproximateLocation","currentLocation","lat","lng","weather","navigator","geolocation","getCurrentPosition","b","coords","latitude","longitude","then","result","console","log"],"mappings":";;;;;;AACA,OAAOA,MAAP,MAAmB,sBAAnB;AAEA,SAASC,SAAT,QAAoC,OAApC;AACA,SAASC,YAAT,EAAuBC,oBAAvB,QAAmD,sBAAnD;;AAGA,MAAMC,KAAoB,GAAIC,CAAD,IAAO;AAClC,MAAIC,mBAAmB,GAAG,KAA1B;AACA,MAAIC,eAAe,GAAG;AACpBC,IAAAA,GAAG,EAAE,CADe;AAEpBC,IAAAA,GAAG,EAAE;AAFe,GAAtB;AAIA,MAAIC,OAAJ;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,gBACE,MAAMU,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACHC,CAAD,IACGP,eAAe,GAAG;AACjBC,MAAAA,GAAG,EAAEM,CAAC,CAACC,MAAF,CAASC,QADG;AAEjBP,MAAAA,GAAG,EAAEK,CAAC,CAACC,MAAF,CAASE;AAFG,KAFjB,CADR;;AASA,QAAIV,eAAe,CAACC,GAAhB,KAAwB,CAAxB,IAA6BD,eAAe,CAACE,GAAhB,KAAwB,CAAzD,EAA4D;AAC1DH,MAAAA,mBAAmB,GAAG,IAAtB;AACAJ,MAAAA,YAAY,GAAGgB,IAAf,CAAqBC,MAAD,IAAaZ,eAAe,GAAGY,MAAnD;AACD;;AAEDhB,IAAAA,oBAAoB,CAACI,eAAD,CAApB,CAAsCW,IAAtC,CAA4CC,MAAD,IAAaT,OAAO,GAAGS,MAAlE;AACD,GAhBQ,EAgBN,EAhBM,CAAT;AAkBAC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AAEA,SAAO,MAAC,MAAD,eAAYA,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CA9BD;;AAgCA,eAAeN,KAAf","sourcesContent":["import { Box, Image } from \"grommet\";\nimport Layout from \"../components/layout\";\nimport { NextPage } from \"next\";\nimport { useEffect, useState } from \"react\";\nimport { useIPWeather, useWeatherCordinates } from \"../hooks/use-weather\";\nimport { GeoCordinates } from \"../interfaces/types\";\n\nconst Index: NextPage<any> = (_) => {\n  let _aproximateLocation = false;\n  let currentLocation = {\n    lat: 0,\n    lng: 0,\n  };\n  let weather;\n\n  useEffect(() => {\n    async () =>\n      await navigator.geolocation.getCurrentPosition(\n        (b) =>\n          (currentLocation = {\n            lat: b.coords.latitude,\n            lng: b.coords.longitude,\n          })\n      );\n\n    if (currentLocation.lat === 0 && currentLocation.lng === 0) {\n      _aproximateLocation = true;\n      useIPWeather().then((result) => (currentLocation = result));\n    }\n\n    useWeatherCordinates(currentLocation).then((result) => (weather = result));\n  }, []);\n\n  console.log(\"chegamos\");\n  console.log(weather);\n\n  return <Layout {...weather} />;\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}