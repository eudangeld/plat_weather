{"ast":null,"code":"import _regeneratorRuntime from \"/Users/dannylodangel/Documents/repos/plat_weather/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/dannylodangel/Documents/repos/plat_weather/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s2 = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nvar useGeoWeather = function useGeoWeather() {\n  _s2();\n\n  var _useState = useState(false),\n      usingGeoIp = _useState[0],\n      setGeoIp = _useState[1];\n\n  var _useState2 = useState(),\n      weather = _useState2[0],\n      setWeather = _useState2[1];\n\n  var _useState3 = useState(true),\n      loading = _useState3[0],\n      setLoading = _useState3[1];\n\n  var _useState4 = useState({\n    lat: 0,\n    lng: 0\n  }),\n      location = _useState4[0],\n      setLocation = _useState4[1];\n\n  useEffect(function () {\n    var _s = $RefreshSig$();\n\n    function withBrowserLocation() {\n      return _withBrowserLocation.apply(this, arguments);\n    }\n\n    function _withBrowserLocation() {\n      _withBrowserLocation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return navigator.geolocation.getCurrentPosition(function (sucess) {\n                  console.log(sucess);\n                  return setLocation({\n                    lat: sucess.coords.latitude,\n                    lng: sucess.coords.longitude\n                  });\n                }, /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(error) {\n                    var _ipLocation;\n\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            setGeoIp(true);\n                            _context.next = 3;\n                            return withIpLocation();\n\n                          case 3:\n                            _ipLocation = _context.sent;\n                            setLocation(_ipLocation);\n\n                          case 5:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _withBrowserLocation.apply(this, arguments);\n    }\n\n    withBrowserLocation().then(_s(function () {\n      _s();\n\n      useWeatherCordinates(location).then(function (_weather) {\n        setWeather(_weather);\n        setLoading(false);\n      });\n    }, \"ED1WSfPuAutyyotkH0ImvhNO/X4=\", false, function () {\n      return [useWeatherCordinates];\n    }));\n  }, []);\n  return [weather, loading, usingGeoIp];\n};\n\n_s2(useGeoWeather, \"GPyJpcyZXBYkxM+0mCqJdKHS0vg=\");\n\nexport default useGeoWeather;\nexport function useWeatherCordinates(_x2) {\n  return _useWeatherCordinates.apply(this, arguments);\n}\n\nfunction _useWeatherCordinates() {\n  _useWeatherCordinates = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(props) {\n    var _result;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log(props);\n            _context3.next = 3;\n            return axios.get(\"http://api.openweathermap.org/data/2.5/weather?units=metric&lat=\".concat(props.lat.toString(), \"&lon=\").concat(props === null || props === void 0 ? void 0 : props.lng.toString(), \"&appid=\").concat(process.env.WEATHER_KEY));\n\n          case 3:\n            _result = _context3.sent;\n            return _context3.abrupt(\"return\", _result.data);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _useWeatherCordinates.apply(this, arguments);\n}\n\nexport function withIpLocation() {\n  return _withIpLocation.apply(this, arguments);\n}\n\nfunction _withIpLocation() {\n  _withIpLocation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n    var _result;\n\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return axios.get(\"https://ipgeolocation.abstractapi.com/v1/?api_key=\".concat(process.env.IPLOCATION_KEY));\n\n          case 2:\n            _result = _context4.sent;\n            return _context4.abrupt(\"return\", {\n              lat: _result.data.latitude,\n              lng: _result.data.longitude\n            });\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _withIpLocation.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/dannylodangel/Documents/repos/plat_weather/hooks/useWeather.tsx"],"names":["axios","useEffect","useState","useGeoWeather","usingGeoIp","setGeoIp","weather","setWeather","loading","setLoading","lat","lng","location","setLocation","withBrowserLocation","navigator","geolocation","getCurrentPosition","sucess","console","log","coords","latitude","longitude","error","withIpLocation","_ipLocation","then","useWeatherCordinates","_weather","props","get","toString","process","env","WEATHER_KEY","_result","data","IPLOCATION_KEY"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { GeoCordinates, WeatherProps } from \"../interfaces/types\";\n\nconst useGeoWeather = () => {\n  const [usingGeoIp, setGeoIp] = useState(false);\n  const [weather, setWeather] = useState<any>();\n  const [loading, setLoading] = useState(true);\n  const [location, setLocation] = useState<GeoCordinates>({\n    lat: 0,\n    lng: 0,\n  });\n\n  useEffect(() => {\n    async function withBrowserLocation() {\n      await navigator.geolocation.getCurrentPosition(\n        (sucess) => {\n          console.log(sucess);\n          return setLocation({\n            lat: sucess.coords.latitude,\n            lng: sucess.coords.longitude,\n          });\n        },\n        async (error) => {\n          setGeoIp(true);\n          const _ipLocation = await withIpLocation();\n          setLocation(_ipLocation);\n        }\n      );\n    }\n\n    withBrowserLocation().then(() => {\n      useWeatherCordinates(location).then((_weather) => {\n        setWeather(_weather);\n        setLoading(false);\n      });\n    });\n  }, []);\n\n  return [weather, loading, usingGeoIp];\n};\n\nexport default useGeoWeather;\n\nexport async function useWeatherCordinates(\n  props: GeoCordinates\n): Promise<WeatherProps> {\n  console.log(props);\n  const _result = await axios.get(\n    `http://api.openweathermap.org/data/2.5/weather?units=metric&lat=${props.lat.toString()}&lon=${props?.lng.toString()}&appid=${\n      process.env.WEATHER_KEY\n    }`\n  );\n  return _result.data;\n}\n\nexport async function withIpLocation(): Promise<GeoCordinates> {\n  const _result = await axios.get(\n    `https://ipgeolocation.abstractapi.com/v1/?api_key=${process.env.IPLOCATION_KEY}`\n  );\n  return {\n    lat: _result.data.latitude,\n    lng: _result.data.longitude,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}