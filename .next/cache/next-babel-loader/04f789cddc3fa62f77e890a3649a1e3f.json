{"ast":null,"code":"var _jsxFileName = \"/Users/dannylodangel/Documents/repos/plat_weather/pages/country/[city].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Box } from \"grommet\";\nimport { useRouter } from \"next/router\";\nimport { useState } from \"react\";\nimport Spinner from \"../../components/spinner\"; // import useAutoWeather from \"../../hooks/useAutoWeather\";\n\nconst Topic = _ => {\n  const router = useRouter();\n  const query = router.asPath.split(\"/\")[2];\n  const {\n    0: weather,\n    1: setWeather\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n\n  if (!loading) {\n    console.log(\"crozour\");\n    return __jsx(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(Box, {\n    height: \"large\",\n    width: \"large\",\n    align: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, __jsx(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Topic;","map":{"version":3,"sources":["/Users/dannylodangel/Documents/repos/plat_weather/pages/country/[city].tsx"],"names":["Box","useRouter","useState","Spinner","Topic","_","router","query","asPath","split","weather","setWeather","loading","setLoading","console","log"],"mappings":";;;AACA,SAASA,GAAT,QAAoB,SAApB;AAGA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,OAAP,MAAoB,0BAApB,C,CACA;;AAEA,MAAMC,KAAe,GAAIC,CAAD,IAAO;AAC7B,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAMM,KAAK,GAAGD,MAAM,CAACE,MAAP,CAAcC,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAd;AAEA,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBT,QAAQ,EAAtC;AACA,QAAM;AAAA,OAACU,OAAD;AAAA,OAAUC;AAAV,MAAwBX,QAAQ,CAAC,IAAD,CAAtC;;AAEA,MAAI,CAACU,OAAL,EAAc;AACZE,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,WAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE,MAAC,GAAD;AAAK,IAAA,MAAM,EAAC,OAAZ;AAAoB,IAAA,KAAK,EAAC,OAA1B;AAAkC,IAAA,KAAK,EAAC,QAAxC;AAAiD,IAAA,OAAO,EAAC,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAjBD;;AAkBA,eAAeX,KAAf","sourcesContent":["import axios from \"axios\";\nimport { Box } from \"grommet\";\nimport { GetStaticProps, NextPage } from \"next\";\nimport { route } from \"next/dist/next-server/server/router\";\nimport { useRouter } from \"next/router\";\nimport { useEffect, useState } from \"react\";\nimport Layout from \"../../components/layout\";\nimport Spinner from \"../../components/spinner\";\n// import useAutoWeather from \"../../hooks/useAutoWeather\";\n\nconst Topic: NextPage = (_) => {\n  const router = useRouter();\n  const query = router.asPath.split(\"/\")[2];\n\n  const [weather, setWeather] = useState<any>();\n  const [loading, setLoading] = useState(true);\n\n  if (!loading) {\n    console.log(\"crozour\");\n    return <Spinner />;\n  }\n\n  return (\n    <Box height=\"large\" width=\"large\" align=\"center\" justify=\"center\">\n      <Spinner />\n    </Box>\n  );\n};\nexport default Topic;\n"]},"metadata":{},"sourceType":"module"}