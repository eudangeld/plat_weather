{"ast":null,"code":"var _jsxFileName = \"/Users/dannylodangel/Documents/repos/plat_weather/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Box } from \"grommet\";\nimport { useEffect, useState } from \"react\";\nimport UseWeather from \"../hooks/use-weather\";\n\nconst Index = _ => {\n  const {\n    0: currentLocation,\n    1: setCurrentLocation\n  } = useState();\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(b => setCurrentLocation(b));\n  }, []);\n\n  const _location = new Location({\n    lat: currentLocation === null || currentLocation === void 0 ? void 0 : currentLocation.coords.latitude,\n    lng: currentLocation === null || currentLocation === void 0 ? void 0 : currentLocation.coords.altitude\n  });\n\n  UseWeather({\n    lat: currentLocation === null || currentLocation === void 0 ? void 0 : currentLocation.coords.latitude,\n    lng: currentLocation === null || currentLocation === void 0 ? void 0 : currentLocation.coords.altitude\n  });\n  console.log(currentLocation);\n  return __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }\n  }); // return <Layout {...newsProps}></Layout>;\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/dannylodangel/Documents/repos/plat_weather/pages/index.tsx"],"names":["Box","useEffect","useState","UseWeather","Index","_","currentLocation","setCurrentLocation","navigator","geolocation","getCurrentPosition","b","_location","Location","lat","coords","latitude","lng","altitude","console","log"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,SAApB;AAEA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;;AAEA,MAAMC,KAAe,GAAIC,CAAD,IAAO;AAC7B,QAAM;AAAA,OAACC,eAAD;AAAA,OAAkBC;AAAlB,MAAwCL,QAAQ,EAAtD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,CAAD,IAAOJ,kBAAkB,CAACI,CAAD,CAAlE;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,SAAS,GAAG,IAAIC,QAAJ,CAAa;AAC7BC,IAAAA,GAAG,EAAER,eAAF,aAAEA,eAAF,uBAAEA,eAAe,CAAES,MAAjB,CAAwBC,QADA;AAE7BC,IAAAA,GAAG,EAAEX,eAAF,aAAEA,eAAF,uBAAEA,eAAe,CAAES,MAAjB,CAAwBG;AAFA,GAAb,CAAlB;;AAKAf,EAAAA,UAAU,CAAC;AACTW,IAAAA,GAAG,EAAER,eAAF,aAAEA,eAAF,uBAAEA,eAAe,CAAES,MAAjB,CAAwBC,QADpB;AAETC,IAAAA,GAAG,EAAEX,eAAF,aAAEA,eAAF,uBAAEA,eAAe,CAAES,MAAjB,CAAwBG;AAFpB,GAAD,CAAV;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYd,eAAZ;AAEA,SAAO,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,CAnB6B,CAqB7B;AACD,CAtBD;;AAwBA,eAAeF,KAAf","sourcesContent":["import { Box } from \"grommet\";\nimport { NextPage } from \"next\";\nimport { useEffect, useState } from \"react\";\nimport UseWeather from \"../hooks/use-weather\";\n\nconst Index: NextPage = (_) => {\n  const [currentLocation, setCurrentLocation] = useState<GeolocationPosition>();\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((b) => setCurrentLocation(b));\n  }, []);\n\n  const _location = new Location({\n    lat: currentLocation?.coords.latitude,\n    lng: currentLocation?.coords.altitude,\n  });\n\n  UseWeather({\n    lat: currentLocation?.coords.latitude,\n    lng: currentLocation?.coords.altitude,\n  });\n\n  console.log(currentLocation);\n\n  return <Box></Box>;\n\n  // return <Layout {...newsProps}></Layout>;\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}