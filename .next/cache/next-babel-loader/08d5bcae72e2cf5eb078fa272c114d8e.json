{"ast":null,"code":"var _jsxFileName = \"/Users/dannylodangel/Documents/repos/plat_weather/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Box } from \"grommet\";\nimport { useEffect, useState } from \"react\";\nimport { useIPWeather, useWeatherApi } from \"../hooks/use-weather\";\n\nconst Index = _ => {\n  const {\n    0: currentLocation,\n    1: setCurrentLocation\n  } = useState({\n    lat: 0,\n    lng: 0\n  });\n  const {\n    0: weather,\n    1: setWeather\n  } = useState();\n  useEffect(() => {\n    async () => await navigator.geolocation.getCurrentPosition(b => setCurrentLocation({\n      lat: b.coords.latitude,\n      lng: b.coords.longitude\n    }));\n\n    console.log(currentLocation);\n\n    if (currentLocation === undefined) {\n      async () => {\n        console.log(\"vamos de IP en\");\n\n        const _locationResult = await useIPWeather();\n\n        setCurrentLocation(_locationResult);\n      };\n    }\n\n    useWeatherApi(currentLocation).then(result => setWeather(result));\n    console.log(weather);\n  }, [currentLocation]); // const _weather = UseWeather(currentLocation);\n  // console.log(_weather);\n\n  return __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 10\n    }\n  }); // return <Layout {...newsProps}></Layout>;\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/dannylodangel/Documents/repos/plat_weather/pages/index.tsx"],"names":["Box","useEffect","useState","useIPWeather","useWeatherApi","Index","_","currentLocation","setCurrentLocation","lat","lng","weather","setWeather","navigator","geolocation","getCurrentPosition","b","coords","latitude","longitude","console","log","undefined","_locationResult","then","result"],"mappings":";;;AACA,SAASA,GAAT,QAAoB,SAApB;AAEA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,sBAA5C;;AAGA,MAAMC,KAAe,GAAIC,CAAD,IAAO;AAC7B,QAAM;AAAA,OAACC,eAAD;AAAA,OAAkBC;AAAlB,MAAwCN,QAAQ,CAAgB;AACpEO,IAAAA,GAAG,EAAE,CAD+D;AAEpEC,IAAAA,GAAG,EAAE;AAF+D,GAAhB,CAAtD;AAIA,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBV,QAAQ,EAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,gBACE,MAAMY,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,CAAD,IAC7CR,kBAAkB,CAAC;AACjBC,MAAAA,GAAG,EAAEO,CAAC,CAACC,MAAF,CAASC,QADG;AAEjBR,MAAAA,GAAG,EAAEM,CAAC,CAACC,MAAF,CAASE;AAFG,KAAD,CADd,CADR;;AAQAC,IAAAA,OAAO,CAACC,GAAR,CAAYd,eAAZ;;AAEA,QAAIA,eAAe,KAAKe,SAAxB,EAAmC;AACjC,kBAAY;AACVF,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;;AACA,cAAME,eAAe,GAAG,MAAMpB,YAAY,EAA1C;;AACAK,QAAAA,kBAAkB,CAACe,eAAD,CAAlB;AACD,OAJD;AAKD;;AACDnB,IAAAA,aAAa,CAACG,eAAD,CAAb,CAA+BiB,IAA/B,CAAqCC,MAAD,IAAYb,UAAU,CAACa,MAAD,CAA1D;AAEAL,IAAAA,OAAO,CAACC,GAAR,CAAYV,OAAZ;AACD,GArBQ,EAqBN,CAACJ,eAAD,CArBM,CAAT,CAP6B,CA8B7B;AAEA;;AAEA,SAAO,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,CAlC6B,CAoC7B;AACD,CArCD;;AAuCA,eAAeF,KAAf","sourcesContent":["import axios from \"axios\";\nimport { Box } from \"grommet\";\nimport { NextPage } from \"next\";\nimport { useEffect, useState } from \"react\";\nimport { useIPWeather, useWeatherApi } from \"../hooks/use-weather\";\nimport { GeoCordinates } from \"../interfaces/types\";\n\nconst Index: NextPage = (_) => {\n  const [currentLocation, setCurrentLocation] = useState<GeoCordinates>({\n    lat: 0,\n    lng: 0,\n  });\n  const [weather, setWeather] = useState();\n\n  useEffect(() => {\n    async () =>\n      await navigator.geolocation.getCurrentPosition((b) =>\n        setCurrentLocation({\n          lat: b.coords.latitude,\n          lng: b.coords.longitude,\n        })\n      );\n\n    console.log(currentLocation);\n\n    if (currentLocation === undefined) {\n      async () => {\n        console.log(\"vamos de IP en\");\n        const _locationResult = await useIPWeather();\n        setCurrentLocation(_locationResult);\n      };\n    }\n    useWeatherApi(currentLocation).then((result) => setWeather(result));\n\n    console.log(weather);\n  }, [currentLocation]);\n\n  // const _weather = UseWeather(currentLocation);\n\n  // console.log(_weather);\n\n  return <Box></Box>;\n\n  // return <Layout {...newsProps}></Layout>;\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}