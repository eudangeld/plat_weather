{"ast":null,"code":"var _jsxFileName = \"/Users/dannylodangel/Documents/repos/plat_weather/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Box } from \"grommet\";\nimport { useEffect, useState } from \"react\";\nimport { useIPWeather } from \"../hooks/use-weather\";\n\nconst Index = _ => {\n  const {\n    0: currentLocation,\n    1: setCurrentLocation\n  } = useState();\n  const {\n    0: weatherResponse,\n    1: setResponse\n  } = useState();\n  useEffect(() => {\n    async () => await navigator.geolocation.getCurrentPosition(b => setCurrentLocation({\n      lat: b.coords.latitude,\n      lng: b.coords.longitude\n    }));\n\n    if (currentLocation === undefined) {\n      async () => {\n        const _result = await useIPWeather();\n\n        setCurrentLocation(_result);\n      };\n    }\n  }, []); // const _weather = UseWeather(currentLocation);\n  // console.log(_weather);\n\n  return __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }\n  }); // return <Layout {...newsProps}></Layout>;\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/dannylodangel/Documents/repos/plat_weather/pages/index.tsx"],"names":["Box","useEffect","useState","useIPWeather","Index","_","currentLocation","setCurrentLocation","weatherResponse","setResponse","navigator","geolocation","getCurrentPosition","b","lat","coords","latitude","lng","longitude","undefined","_result"],"mappings":";;;AACA,SAASA,GAAT,QAAoB,SAApB;AAEA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,YAAT,QAA6B,sBAA7B;;AAGA,MAAMC,KAAe,GAAIC,CAAD,IAAO;AAC7B,QAAM;AAAA,OAACC,eAAD;AAAA,OAAkBC;AAAlB,MAAwCL,QAAQ,EAAtD;AACA,QAAM;AAAA,OAACM,eAAD;AAAA,OAAkBC;AAAlB,MAAiCP,QAAQ,EAA/C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,gBACE,MAAMS,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,CAAD,IAC7CN,kBAAkB,CAAC;AACjBO,MAAAA,GAAG,EAAED,CAAC,CAACE,MAAF,CAASC,QADG;AAEjBC,MAAAA,GAAG,EAAEJ,CAAC,CAACE,MAAF,CAASG;AAFG,KAAD,CADd,CADR;;AAQA,QAAIZ,eAAe,KAAKa,SAAxB,EAAmC;AACjC,kBAAY;AACV,cAAMC,OAAO,GAAG,MAAMjB,YAAY,EAAlC;;AACAI,QAAAA,kBAAkB,CAACa,OAAD,CAAlB;AACD,OAHD;AAID;AACF,GAfQ,EAeN,EAfM,CAAT,CAJ6B,CAqB7B;AAEA;;AAEA,SAAO,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,CAzB6B,CA2B7B;AACD,CA5BD;;AA8BA,eAAehB,KAAf","sourcesContent":["import axios from \"axios\";\nimport { Box } from \"grommet\";\nimport { NextPage } from \"next\";\nimport { useEffect, useState } from \"react\";\nimport { useIPWeather } from \"../hooks/use-weather\";\nimport { GeoCordinates } from \"../interfaces\";\n\nconst Index: NextPage = (_) => {\n  const [currentLocation, setCurrentLocation] = useState<GeoCordinates>();\n  const [weatherResponse, setResponse] = useState();\n\n  useEffect(() => {\n    async () =>\n      await navigator.geolocation.getCurrentPosition((b) =>\n        setCurrentLocation({\n          lat: b.coords.latitude,\n          lng: b.coords.longitude,\n        })\n      );\n\n    if (currentLocation === undefined) {\n      async () => {\n        const _result = await useIPWeather();\n        setCurrentLocation(_result);\n      };\n    }\n  }, []);\n\n  // const _weather = UseWeather(currentLocation);\n\n  // console.log(_weather);\n\n  return <Box></Box>;\n\n  // return <Layout {...newsProps}></Layout>;\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}