{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/dannylodangel/Documents/repos/plat_weather/components/card.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Box, Heading, Image, Text } from \"grommet\";\nexport var Card = function Card(props) {\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    width: \"medium\",\n    background: {\n      image: \"/bg.jpg\"\n    },\n    margin: {\n      top: \"large\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, __jsx(Heading, {\n    margin: {\n      bottom: \"0px\"\n    },\n    color: \"brand\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, props.name), __jsx(Text, {\n    color: \"brand\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, props.weather[0].description.toUpperCase()), __jsx(Box, {\n    direction: \"row-responsive\",\n    justify: \"start\",\n    gap: \"medium\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    width: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, __jsx(Image, {\n    fit: \"contain\",\n    src: process.env.BASE_ICON_URL + props.weather[0].icon + \"@2x.png\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  })), __jsx(Heading, {\n    color: \"brand\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, Math.trunc(props.main.temp) + \" ยบ\"))));\n};\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/dannylodangel/Documents/repos/plat_weather/components/card.tsx"],"names":["Box","Heading","Image","Text","Card","props","image","top","bottom","name","weather","description","toUpperCase","process","env","BASE_ICON_URL","icon","Math","trunc","main","temp"],"mappings":";;;;;AAAA,SAASA,GAAT,EAAsBC,OAAtB,EAA+BC,KAA/B,EAAsCC,IAAtC,QAAkD,SAAlD;AAIA,OAAO,IAAMC,IAAsB,GAAG,SAAzBA,IAAyB,CAACC,KAAD,EAAW;AAC/C,SACE,4BACE,MAAC,GAAD;AACE,IAAA,KAAK,EAAC,QADR;AAEE,IAAA,UAAU,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAFd;AAGE,IAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,OAAD;AAAS,IAAA,MAAM,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAjB;AAAoC,IAAA,KAAK,EAAC,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACI,IADT,CALF,EAQE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBJ,KAAK,CAACK,OAAN,CAAc,CAAd,EAAiBC,WAAjB,CAA6BC,WAA7B,EAArB,CARF,EASE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,OAAO,EAAC,OAAxC;AAAgD,IAAA,GAAG,EAAC,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,KAAK,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,GAAG,EAAC,SADN;AAEE,IAAA,GAAG,EACDC,OAAO,CAACC,GAAR,CAAYC,aAAZ,GAA4BV,KAAK,CAACK,OAAN,CAAc,CAAd,EAAiBM,IAA7C,GAAoD,SAHxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EASE,MAAC,OAAD;AAAS,IAAA,KAAK,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBC,IAAI,CAACC,KAAL,CAAWb,KAAK,CAACc,IAAN,CAAWC,IAAtB,IAA8B,IAAtD,CATF,CATF,CADF,CADF;AAyBD,CA1BM;KAAMhB,I;AA4Bb,eAAeA,IAAf","sourcesContent":["import { Box, Button, Heading, Image, Text } from \"grommet\";\nimport { FC } from \"react\";\nimport { WeatherProps } from \"../interfaces/types\";\n\nexport const Card: FC<WeatherProps> = (props) => {\n  return (\n    <>\n      <Box\n        width=\"medium\"\n        background={{ image: \"/bg.jpg\" }}\n        margin={{ top: \"large\" }}\n      >\n        <Heading margin={{ bottom: \"0px\" }} color=\"brand\">\n          {props.name}\n        </Heading>\n        <Text color=\"brand\">{props.weather[0].description.toUpperCase()}</Text>\n        <Box direction=\"row-responsive\" justify=\"start\" gap=\"medium\">\n          <Box width=\"small\">\n            <Image\n              fit=\"contain\"\n              src={\n                process.env.BASE_ICON_URL + props.weather[0].icon + \"@2x.png\"\n              }\n            />\n          </Box>\n          <Heading color=\"brand\">{Math.trunc(props.main.temp) + \" ยบ\"}</Heading>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}