{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/dannylodangel/Documents/repos/plat_weather/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Box } from \"grommet\";\nimport { useEffect, useState } from \"react\";\nimport UseWeather from \"../hooks/use-weather\";\n\nvar Index = function Index(_) {\n  _s();\n\n  var _useState = useState(),\n      currentLocation = _useState[0],\n      setCurrentLocation = _useState[1];\n\n  useEffect(function () {\n    navigator.geolocation.getCurrentPosition(function (b) {\n      return setCurrentLocation(b);\n    });\n  }, []);\n  UseWeather({\n    lat: currentLocation === null || currentLocation === void 0 ? void 0 : currentLocation.coords.latitude,\n    lng: currentLocation === null || currentLocation === void 0 ? void 0 : currentLocation.coords.altitude\n  });\n  console.log(currentLocation);\n  return __jsx(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 10\n    }\n  }); // return <Layout {...newsProps}></Layout>;\n};\n\n_s(Index, \"wU4qRs44+8xd5mAT9zstKI+ErC8=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/dannylodangel/Documents/repos/plat_weather/pages/index.tsx"],"names":["Box","useEffect","useState","UseWeather","Index","_","currentLocation","setCurrentLocation","navigator","geolocation","getCurrentPosition","b","lat","coords","latitude","lng","altitude","console","log"],"mappings":";;;;;;AACA,SAASA,GAAT,QAAoB,SAApB;AAEA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,UAAP,MAAuB,sBAAvB;;AAEA,IAAMC,KAAe,GAAG,SAAlBA,KAAkB,CAACC,CAAD,EAAO;AAAA;;AAAA,kBACiBH,QAAQ,EADzB;AAAA,MACtBI,eADsB;AAAA,MACLC,kBADK;;AAG7BN,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAACC,CAAD;AAAA,aAAOJ,kBAAkB,CAACI,CAAD,CAAzB;AAAA,KAAzC;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAR,EAAAA,UAAU,CAAC;AACTS,IAAAA,GAAG,EAAEN,eAAF,aAAEA,eAAF,uBAAEA,eAAe,CAAEO,MAAjB,CAAwBC,QADpB;AAETC,IAAAA,GAAG,EAAET,eAAF,aAAEA,eAAF,uBAAEA,eAAe,CAAEO,MAAjB,CAAwBG;AAFpB,GAAD,CAAV;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYZ,eAAZ;AAEA,SAAO,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,CAd6B,CAgB7B;AACD,CAjBD;;GAAMF,K;;KAAAA,K;AAmBN,eAAeA,KAAf","sourcesContent":["import axios from \"axios\";\nimport { Box } from \"grommet\";\nimport { NextPage } from \"next\";\nimport { useEffect, useState } from \"react\";\nimport Layout from \"../components/layout\";\nimport UseWeather from \"../hooks/use-weather\";\n\nconst Index: NextPage = (_) => {\n  const [currentLocation, setCurrentLocation] = useState<GeolocationPosition>();\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((b) => setCurrentLocation(b));\n  }, []);\n\n  UseWeather({\n    lat: currentLocation?.coords.latitude,\n    lng: currentLocation?.coords.altitude,\n  });\n\n  console.log(currentLocation);\n\n  return <Box></Box>;\n\n  // return <Layout {...newsProps}></Layout>;\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}