{"ast":null,"code":"import _regeneratorRuntime from \"/Users/dannylodangel/Documents/repos/plat_weather/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/dannylodangel/Documents/repos/plat_weather/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/dannylodangel/Documents/repos/plat_weather/pages/index.tsx\",\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Box } from \"grommet\";\nimport { useEffect, useState } from \"react\";\nimport { useIPWeather } from \"../hooks/use-weather\";\n\nvar Index = function Index(_) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  var _useState = useState(),\n      currentLocation = _useState[0],\n      setCurrentLocation = _useState[1];\n\n  var _useState2 = useState(),\n      weatherResponse = _useState2[0],\n      setResponse = _useState2[1];\n\n  useEffect(_s(function () {\n    _s();\n\n    /*#__PURE__*/\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return navigator.geolocation.getCurrentPosition(function (b) {\n                return setCurrentLocation(b);\n              });\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    console.log(currentLocation);\n\n    if (currentLocation === undefined) {\n      console.log(\"vamos\");\n      useIPWeather();\n    }\n  }, \"YDB0Q8+AkUM/Gvh+6KIywZxTBjo=\", false, function () {\n    return [useIPWeather];\n  }), []); // const _weather = UseWeather(currentLocation);\n  // console.log(_weather);\n\n  return __jsx(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }\n  }); // return <Layout {...newsProps}></Layout>;\n};\n\n_s2(Index, \"vjsCYBZ+Odmc14KUbbiNTMg4MnM=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/dannylodangel/Documents/repos/plat_weather/pages/index.tsx"],"names":["Box","useEffect","useState","useIPWeather","Index","_","currentLocation","setCurrentLocation","weatherResponse","setResponse","navigator","geolocation","getCurrentPosition","b","console","log","undefined"],"mappings":";;;;;;;;;AACA,SAASA,GAAT,QAAoB,SAApB;AAEA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,YAAT,QAA6B,sBAA7B;;AAEA,IAAMC,KAAe,GAAG,SAAlBA,KAAkB,CAACC,CAAD,EAAO;AAAA;;AAAA;;AAAA,kBACiBH,QAAQ,EADzB;AAAA,MACtBI,eADsB;AAAA,MACLC,kBADK;;AAAA,mBAEUL,QAAQ,EAFlB;AAAA,MAEtBM,eAFsB;AAAA,MAELC,WAFK;;AAI7BR,EAAAA,SAAS,IAAC,YAAM;AAAA;;AACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACQS,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAACC,CAAD;AAAA,uBAC7CN,kBAAkB,CAACM,CAAD,CAD2B;AAAA,eAAzC,CADR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,eAAZ;;AAEA,QAAIA,eAAe,KAAKU,SAAxB,EAAmC;AACjCF,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAZ,MAAAA,YAAY;AACb;AACF,GAZQ;AAAA,YAULA,YAVK;AAAA,MAYN,EAZM,CAAT,CAJ6B,CAkB7B;AAEA;;AAEA,SAAO,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,CAtB6B,CAwB7B;AACD,CAzBD;;IAAMC,K;;KAAAA,K;AA2BN,eAAeA,KAAf","sourcesContent":["import axios from \"axios\";\nimport { Box } from \"grommet\";\nimport { NextPage } from \"next\";\nimport { useEffect, useState } from \"react\";\nimport { useIPWeather } from \"../hooks/use-weather\";\n\nconst Index: NextPage = (_) => {\n  const [currentLocation, setCurrentLocation] = useState<GeolocationPosition>();\n  const [weatherResponse, setResponse] = useState();\n\n  useEffect(() => {\n    async () =>\n      await navigator.geolocation.getCurrentPosition((b) =>\n        setCurrentLocation(b)\n      );\n\n    console.log(currentLocation);\n\n    if (currentLocation === undefined) {\n      console.log(\"vamos\");\n      useIPWeather();\n    }\n  }, []);\n\n  // const _weather = UseWeather(currentLocation);\n\n  // console.log(_weather);\n\n  return <Box></Box>;\n\n  // return <Layout {...newsProps}></Layout>;\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}